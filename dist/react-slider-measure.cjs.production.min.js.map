{"version":3,"file":"react-slider-measure.cjs.production.min.js","sources":["../src/Measure.tsx","../src/lib/constants.ts","../src/Slider.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"./lib/constants\";\n\nconst tickStyles = `\n  background-color: ${colors.tick};\n  border-radius: 99px;\n  bottom: 0;\n  content: \"\";\n  height: 15px;\n  position: absolute;\n  width: 2px;\n  z-index: 1;\n`;\n\nconst Tick = styled.div`\n  background-color: ${colors.tick};\n  border-radius: 99px;\n  bottom: -40px;\n  height: 30px;\n  left: 50%;\n  position: absolute;\n  transform: translateX(-50%);\n  width: 2px;\n\n  &::after {\n    ${tickStyles}\n    right: -10px;\n  }\n\n  &::before {\n    ${tickStyles}\n    right: -20px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  position: relative;\n`;\n\nconst Item = styled.div`\n  color: ${colors.grey};\n  font-size: 18px;\n  margin: 0 5px;\n  position: relative;\n  text-align: center;\n  user-select: none;\n  width: 20px;\n  line-height: 1;\n  margin-top: 5px;\n\n  &:last-child {\n    ${Tick} {\n      &::before,\n      &::after {\n        display: none;\n      }\n    }\n  }\n`;\n\ninterface IMeasureProps {\n  steps: number;\n  value: number;\n  onClick: (index: number) => void;\n  activeColor?: string;\n}\n\nexport const Measure = React.forwardRef<HTMLDivElement, IMeasureProps>(\n  ({ steps, value, onClick, activeColor }: IMeasureProps, ref) => {\n    return (\n      <Container ref={ref}>\n        {Array(steps)\n          .fill(0)\n          .map((number, i) => (\n            <Item key={i}>\n              <div\n                onClick={() => onClick(i + 1)}\n                style={{\n                  cursor: \"pointer\",\n                  transition: \"all .2s\",\n                  color:\n                    value === i + 1\n                      ? activeColor || colors.active\n                      : colors.grey,\n                  transform:\n                    value === i + 1\n                      ? \"scale(1.3) translateY(-3px)\"\n                      : \"scale(1)\",\n                }}\n              >\n                {i + 1}\n              </div>\n              <Tick />\n            </Item>\n          ))}\n      </Container>\n    );\n  }\n);\n","// tslint:disable:object-literal-sort-keys\nexport const colors = {\n  bar: \"#343454\",\n  tick: \"#EDEEF2\",\n  grey: \"#EDEEF2\",\n  active: \"#5A2CC9\",\n};\n","import useComponentSize from \"@rehooks/component-size\";\nimport React, { useEffect, useRef } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { useDrag } from \"react-use-gesture\";\nimport styled from \"styled-components\";\nimport { Measure } from \"./Measure\";\nimport { colors } from \"./lib/constants\";\n\nconst SliderContainer = styled.div`\n  display: flex;\n  height: 63px;\n  overflow: hidden;\n  position: relative;\n\n  &::after {\n    background: transparent;\n    bottom: 0;\n    content: \"\";\n    cursor: ew-resize;\n    height: 30px;\n    left: 0;\n    position: absolute;\n    right: 0;\n    z-index: 100;\n  }\n`;\n\nconst Bar = styled.div<{ activeColor: string }>`\n  background: ${p => (p.activeColor ? p.activeColor : colors.active)};\n  border-radius: 99px;\n  bottom: 0;\n  height: 30px;\n  left: 50%;\n  position: absolute;\n  width: 2px;\n  z-index: 99;\n`;\n\nconst interpolateTransform: any = (x: number, y: number) =>\n  `translate3D(${x}px, ${y}px, 0)`;\n\nexport const Slider = ({\n  steps,\n  value = 1,\n  onChange,\n  activeColor,\n}: {\n  steps?: number;\n  value?: number;\n  onChange: (newValue: number) => void;\n  activeColor?: string;\n}) => {\n  const ref = useRef<HTMLDivElement>();\n  const width = useComponentSize(ref).width;\n  const stepWidth = width / steps;\n  const [{ xy }, set] = useSpring(() => ({\n    xy: [0, 0],\n  }));\n  const bind = useDrag(({ down, delta, memo = xy.getValue() }) => {\n    let x = delta[0] + memo[0];\n\n    if (!down) {\n      x = Math.min(0, Math.max(-1 * width, x));\n      const newValue = Math.max(Math.round(x / stepWidth), (steps - 1) * -1);\n      x = newValue * stepWidth;\n      onChange(newValue * -1 + 1);\n    }\n\n    set({ xy: [x, 0] });\n\n    return memo;\n  });\n\n  useEffect(() => {\n    if (width) {\n      set({ xy: [(value - 1) * stepWidth * -1, 0] });\n    }\n  }, [width, value, set, stepWidth]);\n\n  return (\n    <SliderContainer {...bind()}>\n      <animated.div\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: \"50%\",\n          zIndex: 99,\n          bottom: 0,\n          marginLeft: -14,\n          transform: xy.interpolate(interpolateTransform),\n          marginTop: \"auto\",\n        }}\n      >\n        <Measure\n          activeColor={activeColor}\n          value={value}\n          steps={steps}\n          onClick={onChange}\n          ref={ref}\n        />\n      </animated.div>\n      <Bar activeColor={activeColor} />\n    </SliderContainer>\n  );\n};\n"],"names":["tickStyles","Tick","styled","div","_templateObject","Container","_templateObject2","Item","_templateObject3","Measure","React","forwardRef","ref","value","onClick","activeColor","Array","steps","fill","map","number","i","key","style","cursor","transition","color","transform","SliderContainer","Bar","p","interpolateTransform","x","y","onChange","useRef","width","useComponentSize","stepWidth","useSpring","xy","set","bind","useDrag","down","delta","memo","getValue","Math","min","max","newValue","round","useEffect","animated","position","top","left","zIndex","bottom","marginLeft","interpolate","marginTop"],"mappings":"ujCAIMA,iKAWAC,EAAOC,EAAOC,IAAVC,ICZF,UDuBFJ,EAKAA,GAKAK,EAAYH,EAAOC,IAAVG,KAKTC,EAAOL,EAAOC,IAAVK,ICrCF,UDiDFP,GAgBOQ,EAAUC,EAAMC,YAC3B,WAAwDC,OAA9CC,IAAAA,MAAOC,IAAAA,QAASC,IAAAA,mBAEtBL,gBAACL,GAAUO,IAAKA,GACbI,QAHJC,OAIMC,KAAK,GACLC,KAAI,SAACC,EAAQC,UACZX,gBAACH,GAAKe,IAAKD,GACTX,uBACEI,QAAS,kBAAMA,EAAQO,EAAI,IAC3BE,MAAO,CACLC,OAAQ,UACRC,WAAY,UACZC,MACEb,IAAUQ,EAAI,EACVN,GC/Ed,UADF,UDkFUY,UACEd,IAAUQ,EAAI,EACV,8BACA,aAGPA,EAAI,GAEPX,gBAACT,ijBEtFf,IAAM2B,EAAkB1B,EAAOC,IAAVC,KAmBfyB,EAAM3B,EAAOC,IAAVG,KACO,SAAAwB,UAAMA,EAAEf,YAAce,EAAEf,YDvB9B,aCiCJgB,EAA4B,SAACC,EAAWC,wBAC7BD,SAAQC,2BAEH,gBACpBhB,IAAAA,UACAJ,MAAAA,aAAQ,IACRqB,IAAAA,SACAnB,IAAAA,YAOMH,EAAMuB,WACNC,EAAQC,EAAiBzB,GAAKwB,MAC9BE,EAAYF,EAAQnB,IACJsB,aAAU,iBAAO,CACrCC,GAAI,CAAC,EAAG,OADDA,OAAAA,GAAMC,OAGTC,EAAOC,WAAQ,gBAAGC,IAAAA,KAAMC,IAAAA,UAAOC,KAAAA,aAAON,EAAGO,aACzCf,EAAIa,EAAM,GAAKC,EAAK,OAEnBF,EAAM,CACTZ,EAAIgB,KAAKC,IAAI,EAAGD,KAAKE,KAAK,EAAId,EAAOJ,QAC/BmB,EAAWH,KAAKE,IAAIF,KAAKI,MAAMpB,EAAIM,IAA2B,GAAdrB,EAAQ,IAC9De,EAAImB,EAAWb,EACfJ,GAAqB,EAAZiB,EAAgB,UAG3BV,EAAI,CAAED,GAAI,CAACR,EAAG,KAEPc,YAGTO,aAAU,WACJjB,GACFK,EAAI,CAAED,GAAI,EAAE3B,EAAQ,GAAKyB,GAAa,EAAG,OAE1C,CAACF,EAAOvB,EAAO4B,EAAKH,IAGrB5B,gBAACkB,mBAAoBc,KACnBhC,gBAAC4C,WAASnD,KACRoB,MAAO,CACLgC,SAAU,WACVC,IAAK,EACLC,KAAM,MACNC,OAAQ,GACRC,OAAQ,EACRC,YAAa,GACbjC,UAAWa,EAAGqB,YAAY9B,GAC1B+B,UAAW,SAGbpD,gBAACD,GACCM,YAAaA,EACbF,MAAOA,EACPI,MAAOA,EACPH,QAASoB,EACTtB,IAAKA,KAGTF,gBAACmB,GAAId,YAAaA"}